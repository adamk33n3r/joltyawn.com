{"version":3,"sources":["js/jolty.ts","js/main.ts"],"names":[],"mappings":";AAQa,aARb,SAAS,IACD,IAAA,EAAM,IAAI,MAET,OADP,EAAI,IAAM,uDACH,EAKI,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAFb,IAAM,EAAU,IAEhB,EAAA,WAME,SAAA,EAAoB,EAAuB,GAAvB,KAAA,MAAA,EAAuB,KAAA,OAAA,EALpC,KAAA,EAAY,EACZ,KAAA,EAAY,EACZ,KAAA,MAAgB,EAChB,KAAA,SAAmB,EAGnB,KAAA,OA8BT,OA3BS,EAAA,UAAA,OAAP,SAAc,EAAe,GACtB,KAAA,MAAQ,EACR,KAAA,OAAS,EACT,KAAA,GAAK,KAAK,MAEX,KAAK,EAAI,KAAK,QACX,KAAA,QAIF,EAAA,UAAA,KAAP,SAAY,GACN,KAAK,SACP,EAAI,OACJ,EAAI,OAAO,EAAG,GACd,EAAI,UAAU,GAAU,KAAK,EAAG,KAAK,GAAI,EAAQ,MAAO,EAAQ,QAChE,EAAI,WAEJ,EAAI,UAAU,EAAS,KAAK,EAAG,KAAK,IAIjC,EAAA,UAAA,KAAP,WACO,KAAA,EAAK,KAAK,UAAY,KAAK,MAAQ,EAAQ,OAAU,EAAQ,MAC7D,KAAA,GAAK,EAAQ,OACb,KAAA,MAAwB,EAAhB,KAAK,SAAe,EAC5B,KAAA,QAAU,KAAK,UAAY,IAEpC,EArCA,GAAa,QAAA,MAAA;;AC+Bb,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAvCA,IAEI,EAA2B,EAF/B,EAAA,QAAA,WAIM,EAAa,IACb,EAAsB,GAE5B,SAAS,IACP,EAAI,UAAU,EAAG,EAAG,EAAO,MAAO,EAAO,QAErC,EAAW,OAAS,GACtB,EAAW,KAAK,IAAI,EAAA,MAAM,EAAO,MAAO,EAAO,SAGjD,EAAW,QAAQ,SAAC,GAClB,EAAM,OAAO,EAAO,MAAO,EAAO,QAClC,EAAM,KAAK,KAGb,sBAAsB,GAaxB,SAAS,IAGP,EAAO,MAAQ,EAAO,YACtB,EAAO,OAAS,EAAO,aAdzB,EAAE,WACA,QAAQ,IAAI,2BAEZ,EAAS,SAAS,eAAe,UACjC,IACA,EAAM,EAAO,WAAW,MAExB,sBAAsB,KAUxB,EAAE,QAAQ,GAAG,SAAU","file":"main.6f83bfbe.map","sourceRoot":"..","sourcesContent":["function createImage(): HTMLImageElement {\n  const img = new Image();\n  img.src = 'https://static-cdn.jtvnw.net/emoticons/v1/300356/3.0';\n  return img;\n}\n\nconst baseImg = createImage();\n\nexport class Jolty {\n  public x: number = 0;\n  public y: number = 0;\n  public speed: number = 0;\n  public flipped: boolean = false;\n\n  constructor(private width: number, private height: number) {\n    this.init();\n  }\n\n  public update(width: number, height: number) {\n    this.width = width;\n    this.height = height;\n    this.y += this.speed;\n\n    if (this.y > this.height) {\n      this.init();\n    }\n  }\n\n  public draw(ctx: CanvasRenderingContext2D) {\n    if (this.flipped) {\n      ctx.save();\n      ctx.scale(-1, 1);\n      ctx.drawImage(baseImg, -this.x, this.y, -baseImg.width, baseImg.height);\n      ctx.restore();\n    } else {\n      ctx.drawImage(baseImg, this.x, this.y);\n    }\n  }\n\n  public init() {\n    this.x = (Math.random() * (this.width + baseImg.width)) - baseImg.width;\n    this.y = -baseImg.height;\n    this.speed = Math.random() * 5 + 5;\n    this.flipped = Math.random() >= 0.5;\n  }\n}\n","import { Jolty } from './jolty';\n\nlet canvas: HTMLCanvasElement, ctx: CanvasRenderingContext2D;\n\nconst joltyCount = 150;\nconst joltyArray: Jolty[] = [];\n\nfunction spawnImage() {\n  ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n  if (joltyArray.length < joltyCount) {\n    joltyArray.push(new Jolty(canvas.width, canvas.height));\n  }\n\n  joltyArray.forEach((jolty) => {\n    jolty.update(canvas.width, canvas.height);\n    jolty.draw(ctx);\n  });\n\n  requestAnimationFrame(spawnImage);\n}\n\n$(function () {\n  console.log('Welcome, Joltyawn fans!');\n\n  canvas = document.getElementById('canvas') as HTMLCanvasElement;\n  resizeCanvas();\n  ctx = canvas.getContext('2d')!;\n\n  requestAnimationFrame(spawnImage);\n});\n\nfunction resizeCanvas() {\n  // canvas.width = canvas.height * \n  //     (canvas.clientWidth / canvas.clientHeight);\n  canvas.width = canvas.clientWidth;\n  canvas.height = canvas.clientHeight;\n}\n\n$(window).on('resize', resizeCanvas);\n\n"]}